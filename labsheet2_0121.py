# -*- coding: utf-8 -*-
"""Labsheet2.0121

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/123YhHaO4qhX0xLziYWdKdTmrgDaeGVxT

**PART** **1**
"""

import numpy as np
print(np.__version__)

#1D Array

import numpy as np
A1=np.array([1,2,3,4])
print(A1)
print(type(A1))
print(A1.shape) #As there are 4 elements in the array, O/p shows 4. And the , indicates 1D array
print(A1.size)

#2D Array
A2=np.array([[1,2,3,4],[5,6,7,8]])
print(A2)
print(type(A2))
print(A2.shape) # 2 values indicate 2D array, and 2 indicates there are 2 arrays
print(A2.size)
print(A2.ndim)#gives the dimension of the array

#3D Array
A3=np.array([[[1,2,3],[4,5,6],[7,8,9]]])
print(A3)
print(type(A3))
print(A3.shape) # 3 values indicate 3D array, and 1 indicates there is one matrix of 3D
print(A3.size)
print(A3.ndim)#gives the dimension of the array

"""**ZERO** **ARRAY**"""

#Zero Array - all the elemts in the array have value 0
z=np.zeros(3)
z

z=np.zeros(3,dtype=int)
print(z)
print(type(z))
print(z.shape)
print(z.size)
print(z.ndim)

#2D Zero Array
z2=np.zeros((3,4)) #No. of rows and columns
z2

z2=np.zeros((3,4),dtype=int)
print(z2)
print(type(z2))
print(z2.shape)
print(z2.size)
print(z2.ndim)

#3D arrays of Zero
z3=np.zeros((2,3,4))
z3

z3=np.zeros((2,3,4),dtype=int)
print(type(z3))
print(z3.shape)
print(z3.size)
print(z3.ndim)

"""**ONES** **ARRAY**"""

#1D ones array
a=np.ones(3)
a

"""# *Empty* *markdown* *cell*, *double*-*click* *or* *press* *enter* *to* *edit*"""

from re import A
a=np.ones(3,dtype=int)
print(a)
print(type(a))
print(a.shape)
print(a.size)
print(a.ndim)

#2D ones Array
a2=np.ones((3,4)) #No. of rows and columns
a2

z2=np.ones((3,4),dtype=int)
print(a2)
print(type(a2))
print(a2.shape)
print(a2.size)
print(a2.ndim)

#3D arrays of Ones
a3=np.ones((2,3,4))
a3

a3=np.ones((2,3,4),dtype=int)
print(type(a3))
print(a3.shape)
print(a3.size)
print(a3.ndim)

"""**FULL** **ARRAY**"""

import numpy as np

#1D full array
f1=np.full(3,9)
f1

f1=np.full(3,9,dtype=float)
f1

#2D full array
f2=np.full([2,3],9)
f2

#3d Full array
f3=np.full([4,2,3],10)
f3

"""**PART** **2** - **MATPLOTLIB**"""

!pip install matplotlib

import matplotlib.pyplot as plt

#LINE CHART
""" Here is a python list showing the yeild of apples (tons)"""

yield_apples=[0.895,0.91,0.919,0.926,0.929,0.931]
plt.plot(yield_apples)

years=[2010,2011,2012,2013,2014,2015]
yield_apples=yield_apples=[0.895,0.91,0.919,0.926,0.929,0.931]
plt.plot(years,yield_apples)

plt.plot(years,yield_apples)
plt.xlabel('Year')
plt.ylabel('Yield (tons per hectare)')
plt.title('Yield of Apples v/s Year')

"""***Plotting*** ***multiple*** ***lines*** ***with*** ***chart*** ***title*** ***and*** ***legend***"""

Year=range(2000,2008)
Apples=[0.895,0.91,0.919,0.926,0.929,0.9340,0.936,0.937]
Oranges=[0.962,0.941,0.930,0.918,0.908,0.907,0.904,0.901]

plt.plot(Year,Apples)
plt.plot(Year,Oranges)
plt.xlabel('Year')
plt.ylabel('Yield')
plt.title('Crop yields in Kanto')
plt.legend(['Apples','Oranges']);

"""*Empty markdown cell, double-click or press enter to edit*"""

# MARKERS

plt.plot(Year,Apples,marker='o')
plt.plot(Year,Oranges,marker='X')
plt.ylabel('Yield')
plt.title('Crop yields in Kanto')
plt.legend(['Apples','Oranges']);

# Style lines and Markers
#alpha: opacity of the plot
plt.plot(Year,Apples,marker='s',c='b',ls='-',lw=2,ms=8,mew=2,mec='navy') #ls=line style, lw=line width, ms=marker size, mew=marker edge width
plt.plot(Year,Oranges,marker='o',c='r',ls='--',lw=3,ms=10,alpha=0.5)
plt.xlabel('Year')
plt.ylabel('Yield')
plt.title('Crop yields in Kanto')
plt.legend(['Apples','Oranges']);

# FMT
plt.plot(Year, Apples,'s-b')
plt.plot(Year,Oranges,'o-r')
plt.xlabel('Year')
plt.ylabel('Yield')
plt.title('Crop yields in Kanto')
plt.legend(['Apples','Oranges']);

# if no line is specified in fmt, only markers are drawn
plt.plot(Year,Oranges,'or')
plt.title("Yield of Oranges")

# changing the figure size

plt. figure(figsize=(4,4))
plt.plot(Year,Oranges,'or')
plt.title("Yield of Oranges")

"""**BAR CHART**"""

import matplotlib.pyplot as plt
x=[3,1,3,12,2,4,4]
y=[3,2,1,4,5,6,7]
plt.bar(x,y)
plt.title("BAR CHART")
plt.legend(["bar"])
plt.show()

"""**SCATTER PLOT**"""

import matplotlib.pyplot as plt
x=[3,1,3,12,2,4,4]
y=[3,2,1,4,5,6,7]
plt.scatter(x,y)
plt.legend('A')
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Scatter Plot')
plt.show()

"""**PIE CHART**"""

import matplotlib.pyplot as plt
x=[1,2,3,4]
e=(0.1,0,0.2,0)
plt.pie(x,explode=e)
plt.title('PIE CHART')
plt.show()